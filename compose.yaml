services:
  # ==============================
  # Service: heimdall
  # ==============================    
  svcHeimdall:
    image: lscr.io/linuxserver/heimdall:arm64v8-2.6.3
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="America/Bogota" 
    volumes:
      - "${PATH_DATA}/heimdall/config:/config"
    restart: unless-stopped
  # ==============================
  # Service: Pi-hole
  # ==============================
  svcPihole:
    container_name: pihole
    image: pihole/pihole:2025.04.0
    ports:
      - "53:53/tcp" # port DNS (TCP)
      - "53:53/udp" # port DNS (UDP)
      - "8081:80" # ui
    environment:
      TZ: "America/Bogota" # time zone
      FTLCONF_webserver_api_password: ${PIHOLE_PASS}
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_dns_upstreams: '1.1.1.1;8.8.8.8;2606:4700:4700::1111;2001:4860:4860::8888'
    volumes:
      - ${PATH_DATA}/pihole/etc-pihole-v2:/etc/pihole # config
    restart: unless-stopped
  # ==============================
  # Service: Transmission
  # ==============================
  svcTransmission:
    container_name: transmission
    image: linuxserver/transmission:arm64v8-4.0.6
    ports:
      - 8082:9091         # ui
      - 51413:51413       # port (TCP)
      - 51413:51413/udp   # port (UDP)
    volumes:
      - ${PATH_DATA}/transmission/config:/config        # config
      - ${PATH_DATA}/media/downloads:/downloads # downloads
      - ${PATH_DATA}/media/watch:/watch        
    environment:
      - PUID=1000         # user id
      - PGID=1000         # group id
      - TZ=America/Bogota # tz
    restart: unless-stopped
  # ==============================
  # Service: Prowlarr
  # ==============================
  svcProwlarr:
    image: lscr.io/linuxserver/prowlarr:arm64v8-nightly-1.34.1.5018-ls196
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Bogota
    volumes:
      - "${PATH_DATA}/prowlarr:/config"
    ports:
      - 8083:9696
    restart: unless-stopped
  # ==============================
  # Service: Sonarr
  # ==============================
  svcSonarr:
    image: linuxserver/sonarr:arm64v8-4.0.14
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Bogota
    volumes:
      - "${PATH_DATA}/sonarr/data:/config"
      - "${PATH_DATA}/media/tvseries:/tv" 
      - "${PATH_DATA}/media/downloads:/downloads" 
    ports:
      - 8084:8989
    restart: unless-stopped
  # ==============================
  # Service: jellyfin
  # ==============================    
  svcJellyfin:
    image: lscr.io/linuxserver/jellyfin:arm64v8-10.10.7
    container_name: jellyfin
    privileged: true
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Bogota
    volumes:
      - "${PATH_DATA}/jellyfin/library:/config"
      - "${PATH_DATA}/media/tvseries:/data/tvshows"
      - "${PATH_DATA}/media/movies:/data/movies"
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128  
      - /dev/vchiq:/dev/vchiq
    restart: unless-stopped
  # ==============================
  # Service: cAdvisor
  # ============================== 
  svccAdvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    restart: unless-stopped
    ports:
      - 8085:8080
  # ==============================
  # Service: nginx
  # ============================== 
  svcNginx:
      image: nginx:1.27.5-alpine
      container_name: nginx_proxy
      restart: unless-stopped
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - "${PATH_DATA}/compose/homelab/nginx/conf.d:/etc/nginx/conf.d:ro"